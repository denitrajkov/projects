import type { GetStaticPaths, GetStaticProps, NextPage } from "next";
import Head from "next/head";
import PageTitle from "../../components/PageTitle";
import RelatedBlogs from "../../components/RelatedBlogs";
import { BlogItemType, ProductItemType } from "../../types/type";
interface Props {
  blogPost: BlogItemType;
  relatedBlogs: BlogItemType[];
}
const BlogDetail: NextPage<Props> = ({ blogPost, relatedBlogs }) => {
  return (
    <>
      <Head>
        <title>Store - title</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title={blogPost.title!} />

      <section className="bg0 p-t-52 p-b-20">
        <div className="container">
          <div className="row">
            <div className="col-md-8 col-lg-9 p-b-80">
              <div className="p-r-45 p-r-0-lg">
                <div className="wrap-pic-w how-pos5-parent">
                  <img src={blogPost.img} alt="IMG-BLOG" />
                </div>

                <div className="p-t-32">
                  <span className="flex-w align-items-center flex-m stext-111 cl2 p-b-19">
                    <span className="flex-c-m mr-3 bor7 p-lr-15 trans-04">
                      category
                    </span>

                    <span>
                      <span className="cl4">By</span> {blogPost.author}
                      <span className="cl12 m-l-4 m-r-6">|</span>
                    </span>

                    <span>{blogPost.date}</span>
                  </span>

                  <h4 className="ltext-109 cl2 p-b-28">{blogPost.title}</h4>

                  <p className="stext-117 cl6 p-b-26">
                    {blogPost.first_content}
                  </p>

                  <p className="stext-117 cl6 p-b-26">
                    {blogPost.second_content}
                  </p>
                </div>
              </div>
            </div>

            <div className="col-md-4 col-lg-3 p-b-80">
              <div className="side-menu">
                <RelatedBlogs relatedBlogs={relatedBlogs} />
              </div>
            </div>
          </div>
        </div>
      </section>
    </>
  );
};

export default BlogDetail;

export const getStaticPaths: GetStaticPaths = async () => {
  const res = await fetch("http://localhost:5001/blogs");
  const data: BlogItemType[] = await res.json();

  const paths = data.map((prod) => {
    return {
      params: {
        id: prod.id,
      },
    };
  });

  return {
    paths: paths,
    fallback: true,
  };
};

export const getStaticProps: GetStaticProps = async ({ params }) => {
  const id = params?.id;

  if (id) {
    const res = await fetch(`http://localhost:5001/blogs/${id}`);
    const blogPost: BlogItemType = await res.json();

    const resRelaetd = await fetch(
      `http://localhost:5001/blogs?_start=$%7BrandomNo%7D&_limit=3`
    );
    const relatedBlogs: BlogItemType[] = await resRelaetd.json();

    return {
      props: {
        blogPost,
        relatedBlogs,
      },
    };
  }

  return {
    notFound: true,
  };
};
