import type { GetServerSideProps, GetStaticProps, NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { ProductItemType } from "../../types/type";
import React, { useRef, useState } from "react";
import Link from "next/link";

interface Props {
  data: ProductItemType[];
}

const Shop: NextPage<Props> = ({ data }) => {
  const [activeFilter, setActiveFilter] = useState("");
  const router = useRouter();
  const inputValue = useRef<HTMLInputElement>(null);

  const handleSubmit = (event: React.FormEvent<HTMLButtonElement>) => {
    event.preventDefault();

    const value = inputValue?.current?.value;

    router.push({
      pathname: "/shop",
      query: {
        gender_like: value,
      },
    });
    if (inputValue.current) {
      inputValue.current.value = "";
    }
  };

  return (
    <>
      <Head>
        <title>Store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="bg0 m-t-23 p-b-140">
        <div className="container">
          <div className="flex-w flex-sb-m p-b-52">
            <div className="flex-w flex-l-m filter-tope-group m-tb-10">
              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  activeFilter === "*" ? "how-active1" : ""
                }`}
                data-filter="*"
                onClick={() => {
                  router.push({
                    href: "/shop",
                    query: {},
                  });
                  setActiveFilter("*");
                }}
              >
                All Products
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  activeFilter === "women" ? "how-active1" : ""
                }`}
                data-filter="women"
                onClick={(
                  event: React.MouseEvent<HTMLButtonElement, MouseEvent>
                ) => {
                  const genderFilter =
                    event.currentTarget.getAttribute("data-filter");
                  router.push({
                    href: "/shop",
                    query: {
                      ...router.query,
                      gender_like: genderFilter,
                    },
                  });
                  setActiveFilter("women");
                }}
              >
                Women
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  activeFilter === "men" ? "how-active1" : ""
                }`}
                data-filter="man"
                onClick={(
                  event: React.MouseEvent<HTMLButtonElement, MouseEvent>
                ) => {
                  const genderFilter =
                    event.currentTarget.getAttribute("data-filter");

                  router.push({
                    href: "/shop",
                    query: {
                      ...router.query,
                      gender_like: genderFilter,
                    },
                  });
                  setActiveFilter("man");
                }}
              >
                Men
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  activeFilter === "belt" ? "how-active1" : ""
                }`}
                data-filter="belt"
                onClick={(
                  event: React.MouseEvent<HTMLButtonElement, MouseEvent>
                ) => {
                  const beltFilter =
                    event.currentTarget.getAttribute("data-filter");

                  router.push({
                    href: "/shop",
                    query: {
                      ...router.query,
                      q: beltFilter,
                    },
                  });
                  setActiveFilter("belt");
                }}
              >
                Belt
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  activeFilter === "shoes" ? "how-active1" : ""
                }`}
                data-filter="shoes"
                onClick={(
                  event: React.MouseEvent<HTMLButtonElement, MouseEvent>
                ) => {
                  const beltFilter =
                    event.currentTarget.getAttribute("data-filter");

                  router.push({
                    href: "/shop",
                    query: {
                      ...router.query,
                      q: beltFilter,
                    },
                  });
                  setActiveFilter("shoes");
                }}
              >
                Shoes
              </button>

              <button
                className={`stext-106 cl6 hov1 bor3 trans-04 m-r-32 m-tb-5 ${
                  activeFilter === "watches" ? "how-active1" : ""
                }`}
                data-filter="watches"
                onClick={(
                  event: React.MouseEvent<HTMLButtonElement, MouseEvent>
                ) => {
                  const beltFilter =
                    event.currentTarget.getAttribute("data-filter");

                  router.push({
                    href: "/shop",
                    query: {
                      ...router.query,
                      q: beltFilter,
                    },
                  });
                  setActiveFilter("watches");
                }}
              >
                Watches
              </button>
            </div>

            <div className="flex-w flex-c-m m-tb-10">
              <div className="flex-c-m stext-106 cl6 size-105 bor4 pointer hov-btn3 trans-04 m-tb-4 js-show-search show-search">
                <i className="icon-search cl2 m-r-6 fs-15 trans-04 zmdi zmdi-search"></i>
                Search
              </div>
            </div>

            {/* search */}
            <div className="panel-search w-full p-t-10 p-b-15">
              <div className="bor8 dis-flex p-l-15">
                <button
                  onClick={handleSubmit}
                  className="size-113 flex-c-m fs-16 cl2 hov-cl1 trans-04"
                >
                  <i className="zmdi zmdi-search"></i>
                </button>

                <input
                  className="mtext-107 cl2 size-114 plh2 p-r-15"
                  type="text"
                  name="search-product"
                  placeholder="Search"
                  ref={inputValue}
                />
              </div>
            </div>
          </div>

          <div className="row isotope-grid">
            {data.length === 0 ? (
              <p>
                <strong>No result Found</strong>
              </p>
            ) : (
              data.map((item) => (
                <div
                  className="col-sm-6 col-md-4 col-lg-3 p-b-35 isotope-item women"
                  key={item.id}
                >
                  <div className="block2">
                    <div className="block2-pic hov-img0">
                      <img src={item.img} alt="IMG-PRODUCT" />
                      <Link href={`/shop/${item.id}`}>
                        <a
                          href="#"
                          className="block2-btn flex-c-m stext-103 cl2 size-102 bg0 bor2 hov-btn1 p-lr-15 trans-04 js-show-modal1"
                        >
                          View Details
                        </a>
                      </Link>
                    </div>

                    <div className="block2-txt flex-w flex-t p-t-14">
                      <div className="block2-txt-child1 flex-col-l ">
                        <a
                          href="product-detail.html"
                          className="stext-104 cl4 hov-cl1 trans-04 js-name-b2 p-b-6"
                        >
                          {item.title}
                        </a>

                        <span className="stext-105 cl3">{item.price}</span>
                      </div>
                    </div>
                  </div>
                </div>
              ))
            )}
          </div>

          <div className="flex-l-m flex-w w-full p-t-10 m-lr--7">
            <a
              href="#"
              className="flex-c-m how-pagination1 trans-04 m-all-7 active-pagination1"
            >
              1
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              2
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              3
            </a>
          </div>
        </div>
      </div>
    </>
  );
};

export default Shop;

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const belt = query.q;
  const gender = query.gender_like;

  let link: string;

  if (belt && gender) {
    link = `http://localhost:5001/products?q=${belt}&gender_like=${gender}`;
  } else if (belt) {
    link = `http://localhost:5001/products?q=${belt}`;
  } else if (gender) {
    link = `http://localhost:5001/products?gender_like=${gender}`;
  } else {
    link = "http://localhost:5001/products";
  }

  const res = await fetch(link);
  const data: ProductItemType[] = await res.json();

  return {
    props: { data },
  };
};
